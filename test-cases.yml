---
# Позитивные тест-кейсы
# Должна быть реальзована возможность регистрации пользователя, с возможностью входа через Github и Discord
# Должна быть реализована возможность входа для уже зарегистрированных пользователей
# Должна быть реализована возможность востановления пароля на странице входа пользователя
# На главной странице должен быть реализован общий чат пользователей
# У пользователя должна быть возможность создавать лобби
# У пользователя должна быть возможность присоединятся к лобби
# У пользователя должна быть возможность участвовать в турнирах
# У пользователя должна быть возможность посмотреть историю игр
# У пользователя должна быть возможность смотреть запущенную игру
# При создании лобби пользователь должен иметь возможность выбрать сложность игры
# При создании лобби пользователь должен иметь возможность выбора с кем играть (с другим пользователем, с другом, с ботом)
# При создании лобби пользователь должен иметь возможность выбора времени игры
# При создании лобби пользователь должен иметь возможность выбора задачи
# Во время игры пользователь должен иметь возможность выбрать следующие языки программирования: Clojure, C#, Dart, Elixir, Golang, Haskell, Java, Node.js, Kotlin, Php, Pithon, Ruby, Rust, Typescript
# В игре должен быть реализован чат
# Во время игры у пользователя должна быть возможность сдаться 
# Пользователь должен иметь возможность посмотреть свой профиль, где отображается его статистика игр, и сыгранные им игры
# Пользователь должен иметь возможность настроить свой профиль
# Пользователи должны иметь возможность создавать свои задачи
# Должна быть реализованы переходы в Hexlet, Github, Discord, TG разработчиков
# У игроков должен быть реализован рейтинг

# Негативные тест-кейсы
# Должна быть реальзована возможность регистрации пользователя, с возможностью входа через Github и Discord
# Должна быть реализована возможность входа для уже зарегистрированных пользователей
# Должна быть реализована возможность востановления пароля на странице входа пользователя
# На главной странице должен быть реализован общий чат пользователей
# У пользователя должна быть возможность создавать лобби
# У пользователя должна быть возможность присоединятся к лобби
# У пользователя должна быть возможность участвовать в турнирах
# У пользователя должна быть возможность посмотреть историю игр
# У пользователя должна быть возможность смотреть запущенную игру
# При создании лобби пользователь должен иметь возможность выбрать сложность игры
# При создании лобби пользователь должен иметь возможность выбора с кем играть (с другим пользователем, с другом, с ботом)
# При создании лобби пользователь должен иметь возможность выбора времени игры
# При создании лобби пользователь должен иметь возможность выбора задачи
# Во время игры пользователь должен иметь возможность выбрать следующие языки программирования: Clojure, C#, Dart, Elixir, Golang, Haskell, Java, Node.js, Kotlin, Php, Pithon, Ruby, Rust, Typescript
# В игре должен быть реализован чат
# Во время игры у пользователя должна быть возможность сдаться 
# Пользователь должен иметь возможность посмотреть свой профиль, где отображается его статистика игр, и сыгранные им игры
# Пользователь должен иметь возможность настроить свой профиль
# Пользователи должны иметь возможность создавать свои задачи
# Должна быть реализованы переходы в Hexlet, Github, Discord, TG разработчиков
# У игроков должен быть реализован рейтинг

























- summary: |
    Краткое описание тест кейса. Пример: Проверка входа пользователя с существующими логином и паролем
  requirement: |
    Тестируемое требование. Например: При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Это условия, которые необходимы для проведения тест кейса. Они должны быть выполнены еще до запуска тест кейса.
    Например: открыта страница логина
  test-data: |
    Тестовые данные
    Логин = ilona Пароль = password
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Логин = Логин = hexlet Пароль = badpass
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователь должен попасть на главную страницу
